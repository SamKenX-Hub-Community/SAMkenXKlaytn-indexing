apiVersion: apps/v1
kind: Deployment
metadata:
  name: index-node-{{ .Values.node.name }}
  labels:
    app.kubernetes.io/instance: index-node-{{ .Values.node.name }}
    app.kubernetes.io/name: index-node-{{ .Values.node.name }}
    app.kubernetes.io/part-of: graph-indexer
    app.kubernetes.io/version: {{ .Values.image.tag }}
    {{- if .Values.labels }}
{{ toYaml .Values.labels | indent 4 }}
    {{- end }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: index-node-{{ .Values.node.name }}
      app.kubernetes.io/name: index-node-{{ .Values.node.name }}
      app.kubernetes.io/part-of: graph-indexer
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: index-node-{{ .Values.node.name }}
        app.kubernetes.io/name: index-node-{{ .Values.node.name }}
        app.kubernetes.io/part-of: graph-indexer
    spec:
      securityContext: {}
      containers:
        - name: graph-node
          image: {{ .Values.image.name }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
            - name: http
              containerPort: 8000
            - name: json-rpc
              containerPort: 8020
            - name: index-node
              containerPort: 8030
            - name: metrics
              containerPort: 8040
          env:
            - name: GRAPH_ALLOW_NON_DETERMINISTIC_FULLTEXT_SEARCH
              value: "true"
            # The name of the pod that will do block ingestion
            - name: BLOCK_INGESTOR
              value: "index"
            - name: GRAPH_KILL_IF_UNRESPONSIVE
              value: "true"
            {{- if .Values.CustomValues.postgress.external }}
            - name: postgres_host
              value: {{ index  .Values.CustomValues "postgress" "indexer" "host" }}
            - name: postgres_user
              value: {{ index  .Values.CustomValues "postgress" "indexer" "username" }}
            - name: postgres_pass
              value: {{ index  .Values.CustomValues "postgress" "indexer" "password" }}
            - name: postgres_db
              value: {{ index  .Values.CustomValues "postgress" "indexer" "database" }}
            {{ end }}
            - name: node_role
              value: index-node
            - name: GRAPH_LOG
              value: info
            - name: node_id
              value: index
            - name: ETHEREUM_POLLING_INTERVAL
              value: "250"
            - name: ETHEREUM_TRACE_STREAM_STEP_SIZE
              value: "500"
            - name: ETHEREUM_RPC_MAX_PARALLEL_REQUESTS 
              value: "64"
            - name: ETHEREUM_BLOCK_BATCH_SIZE
              value: "128"
            - name: GRAPH_ETHEREUM_MAX_BLOCK_RANGE_SIZE 
              value: "5000"
            - name: GRAPH_ETHEREUM_TARGET_TRIGGERS_PER_BLOCK_RANGE 
              value: "88"
            - name: GRAPH_ETHEREUM_JSON_RPC_TIMEOUT
              value: "60"
            - name: ipfs
              value: "ipfs-{{ .Values.node.name }}-service.{{ .Release.Namespace }}.svc.cluster.local:5001"
            - name: ethereum
              valueFrom:
                configMapKeyRef:
                  name: ethereum-networks-{{ .Values.node.name }}
                  key: networks
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      hostNetwork: false
      dnsPolicy: "ClusterFirst"